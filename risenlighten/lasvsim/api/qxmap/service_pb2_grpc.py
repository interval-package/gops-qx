# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from api.v1.qxmap import service_pb2 as api_dot_v1_dot_qxmap_dot_service__pb2


class QxmapServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/risenlighten.lasvsim.api.datahub.qxmap.v1.QxmapService/Create',
                request_serializer=api_dot_v1_dot_qxmap_dot_service__pb2.CreateRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_qxmap_dot_service__pb2.CreateReply.FromString,
                )
        self.Update = channel.unary_unary(
                '/risenlighten.lasvsim.api.datahub.qxmap.v1.QxmapService/Update',
                request_serializer=api_dot_v1_dot_qxmap_dot_service__pb2.UpdateRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_qxmap_dot_service__pb2.UpdateReply.FromString,
                )
        self.GetOne = channel.unary_unary(
                '/risenlighten.lasvsim.api.datahub.qxmap.v1.QxmapService/GetOne',
                request_serializer=api_dot_v1_dot_qxmap_dot_service__pb2.GetOneRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_qxmap_dot_service__pb2.GetOneReply.FromString,
                )
        self.CheckByBytes = channel.unary_unary(
                '/risenlighten.lasvsim.api.datahub.qxmap.v1.QxmapService/CheckByBytes',
                request_serializer=api_dot_v1_dot_qxmap_dot_service__pb2.CheckByBytesRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_qxmap_dot_service__pb2.CheckByBytesReply.FromString,
                )
        self.Check = channel.unary_unary(
                '/risenlighten.lasvsim.api.datahub.qxmap.v1.QxmapService/Check',
                request_serializer=api_dot_v1_dot_qxmap_dot_service__pb2.CheckRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_qxmap_dot_service__pb2.CheckReply.FromString,
                )
        self.Migrate = channel.unary_unary(
                '/risenlighten.lasvsim.api.datahub.qxmap.v1.QxmapService/Migrate',
                request_serializer=api_dot_v1_dot_qxmap_dot_service__pb2.MigrateRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_qxmap_dot_service__pb2.MigrateReply.FromString,
                )


class QxmapServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOne(self, request, context):
        """rpc Delete (DeleteRequest) returns (DeleteReply) {
        option (google.api.http) = {
        delete: "/api/v1/qxmaps/{id}"
        };
        option (openapi.v3.operation) = {
        summary: "根据 ID 删除地图"
        description: "根据 ID 删除地图"
        };
        };

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckByBytes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Check(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Migrate(self, request, context):
        """rpc Parse(ParseRequest) returns(ParseReply) {
        option (google.api.http) = {
        post: "/api/v1/qxmaps/parse"
        body: "*"
        };
        option (openapi.v3.operation) = {
        summary: "地图解析"
        description: "地图解析"
        };
        };

        rpc GetMapping(GetMappingRequest) returns (GetMappingReply) {
        option (google.api.http) = {
        get: "/api/v1/qxmaps/{id}/mappings"
        };
        option (openapi.v3.operation) = {
        summary: "获取地图映射"
        description: "获取地图映射"
        };
        };

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QxmapServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=api_dot_v1_dot_qxmap_dot_service__pb2.CreateRequest.FromString,
                    response_serializer=api_dot_v1_dot_qxmap_dot_service__pb2.CreateReply.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=api_dot_v1_dot_qxmap_dot_service__pb2.UpdateRequest.FromString,
                    response_serializer=api_dot_v1_dot_qxmap_dot_service__pb2.UpdateReply.SerializeToString,
            ),
            'GetOne': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOne,
                    request_deserializer=api_dot_v1_dot_qxmap_dot_service__pb2.GetOneRequest.FromString,
                    response_serializer=api_dot_v1_dot_qxmap_dot_service__pb2.GetOneReply.SerializeToString,
            ),
            'CheckByBytes': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckByBytes,
                    request_deserializer=api_dot_v1_dot_qxmap_dot_service__pb2.CheckByBytesRequest.FromString,
                    response_serializer=api_dot_v1_dot_qxmap_dot_service__pb2.CheckByBytesReply.SerializeToString,
            ),
            'Check': grpc.unary_unary_rpc_method_handler(
                    servicer.Check,
                    request_deserializer=api_dot_v1_dot_qxmap_dot_service__pb2.CheckRequest.FromString,
                    response_serializer=api_dot_v1_dot_qxmap_dot_service__pb2.CheckReply.SerializeToString,
            ),
            'Migrate': grpc.unary_unary_rpc_method_handler(
                    servicer.Migrate,
                    request_deserializer=api_dot_v1_dot_qxmap_dot_service__pb2.MigrateRequest.FromString,
                    response_serializer=api_dot_v1_dot_qxmap_dot_service__pb2.MigrateReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'risenlighten.lasvsim.api.datahub.qxmap.v1.QxmapService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class QxmapService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/risenlighten.lasvsim.api.datahub.qxmap.v1.QxmapService/Create',
            api_dot_v1_dot_qxmap_dot_service__pb2.CreateRequest.SerializeToString,
            api_dot_v1_dot_qxmap_dot_service__pb2.CreateReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/risenlighten.lasvsim.api.datahub.qxmap.v1.QxmapService/Update',
            api_dot_v1_dot_qxmap_dot_service__pb2.UpdateRequest.SerializeToString,
            api_dot_v1_dot_qxmap_dot_service__pb2.UpdateReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/risenlighten.lasvsim.api.datahub.qxmap.v1.QxmapService/GetOne',
            api_dot_v1_dot_qxmap_dot_service__pb2.GetOneRequest.SerializeToString,
            api_dot_v1_dot_qxmap_dot_service__pb2.GetOneReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckByBytes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/risenlighten.lasvsim.api.datahub.qxmap.v1.QxmapService/CheckByBytes',
            api_dot_v1_dot_qxmap_dot_service__pb2.CheckByBytesRequest.SerializeToString,
            api_dot_v1_dot_qxmap_dot_service__pb2.CheckByBytesReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Check(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/risenlighten.lasvsim.api.datahub.qxmap.v1.QxmapService/Check',
            api_dot_v1_dot_qxmap_dot_service__pb2.CheckRequest.SerializeToString,
            api_dot_v1_dot_qxmap_dot_service__pb2.CheckReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Migrate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/risenlighten.lasvsim.api.datahub.qxmap.v1.QxmapService/Migrate',
            api_dot_v1_dot_qxmap_dot_service__pb2.MigrateRequest.SerializeToString,
            api_dot_v1_dot_qxmap_dot_service__pb2.MigrateReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
