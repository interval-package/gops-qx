syntax = "proto3";

package hdmap;

option go_package = "git.risenlighten.com/lasvsim/map_engine/core/hdmap/v1;hdmapv1";


message HdMap {
  Header header = 1;
  repeated Junction junctions = 2;
  repeated Segment segments = 3;
  repeated Link links = 4;
  repeated Lane lanes = 5;
  repeated Crosswalk crosswalks = 1000;
  repeated Stopline stoplines = 1001;
  repeated TrafficLight traffic_lights = 1002;
  repeated TrafficSign traffic_signs = 1003;
  repeated Movement movements = 1004;
  repeated Connection connections = 1005;
  repeated Object objects = 1006;
}

message HdTrafficMap {
  map<string, Junction> junction_map = 1;
  map<string, Segment> segment_map = 2;
  map<string, Link> link_map = 3;
  map<string, Lane> lane_map = 4;

  map<string, Crosswalk> crosswalk_map = 1000;
  map<string, Stopline> stopline_map = 1001;
  map<string, TrafficLight> traffic_light_map = 1002;
  map<string, TrafficSign> traffic_sign_map = 1003;
  map<string, Movement> movement_map = 1004;
  map<string, Connection> connection_map = 1005;
  Header header = 1006;
  map<string, Object>  object_map = 1007;
}

message Header{
  double north = 1;
  double south = 2;
  double east = 3;
  double west = 4;

  Point center_point = 5;
  string version = 6;
  int64 zone = 7;
  bool use_bias = 8;
}

message Junction{
  //  uint64 id = 1;
  string junction_id = 2;
  // 路口名称
  string name = 3;
  // 路口类型
  string type = 4;
  // link 数组
  repeated string link_ids = 5;
  // 路口封闭点位形状
  repeated Point shape = 6;
  // 交通灯信号控制组
  string traffic_light_id = 1000;
}

message Segment{
  //  uint64 id = 1;
  string segment_id = 2;
  // 道路名称
  string name = 3;
  // 有序的 link id数组
  repeated string ordered_link_ids = 4;
  // 起始路口id
  string start_junction_id = 6;
  // 结束路口id
  string end_junction_id = 7;
  // 长度
  double length = 8;
  // 道路方向角度
  double heading = 9;
  double s_offset = 10;
  // 红绿灯 id
  string traffic_light_pole_id = 1000;
  //  // 停车线 id
  //  string stopline_id = 1001;
}

message Link{
  //  uint64 id = 1;
  string link_id = 2;
  // 相对 link
  string pair_id = 3;
  // link宽度是否固定，为0时不固定，不为0时固定为该值
  double width = 4;
  // 有序的车道引用数组
  repeated string ordered_lane_ids = 5;
  // 车道数量
  int32 lane_num = 6;
  // 起始位置
  Point start_point = 7;
  // 结束位置
  Point end_point = 8;
  //  todo 暂时未用
  double gradient = 9;
  // 所属 segment
  string segment_id = 12;
  // link 长度
  double length = 13;
  // link 类型
  string type = 14;
  // link 方向角度
  double heading = 15;
  // 所属 junction id
  string junction_id = 16;
  // 道路类型
  string road_type = 17;

  double s_offset = 99;

  // link 顺序
  int32 link_order = 1000;
  // link 左边界
  repeated Point left_boundary = 1001;
  // link 右边界
  repeated Point right_boundary = 1002;
  // LinkRange 数组
  //  repeated LinkRange link_ranges = 1003;
}

//message LinkRange {
//  string link_range_id = 1;
//  // 所属 link 引用
//  string link_id = 2;
//  // link 起始位置
//  Point from = 3;
//  // link 结束位置
//  Point to = 4;
//  // 包含车道数目
//  int32 lane_num = 5;
//  // link 的多条车道属性引用数组
//  repeated string lane_attr_ids = 1000;
//}


message Lane{
  //  uint64 id = 1;
  string lane_id = 2;
  // 车道类型
  string type = 3;
  // 车道偏移
  int32 lane_offset = 4;
  // 车道所属 link
  string link_id = 5;
  // 车道转向标志
  Turn turn = 6;
  // 车道中的多段限速属性
  repeated Speed speeds = 7;
  // 停车线id
  string stopline_id = 8;
  // 车道宽度是否固定，为0时不固定，不为0时固定为该值
  double width = 9;

  double length = 10;
  // 车道中心线
  repeated Point center_line = 1000;
  //  // 车道左边界
  //  repeated Point left_boundary = 1001;
  //  // 车道右边界
  //  repeated Point right_boundary = 1002;
  // 车道关联 link

  repeated string upstream_link_ids = 903;

  repeated string downstream_link_ids = 904;

  repeated string connect_link_ids = 1003;

  // 左车道线
  LaneMark left_lane_mark = 1004;
  // 右车道线
  LaneMark right_lane_mark = 1005;

}


//message LaneAttribution {
//  //  string lane_attr_id = 1;
//  // 车道限速
//  Speed speed = 1000;
//  // 车道线标志
//  LaneMark lane_mark = 1001;
//  //  // 车道宽度
//  //  Width width = 1002;
//}

//message Width {
//  // 自身坐标系下 s 坐标
//  double s = 1;
//  // 宽度计算公式中参数 a
//  double a = 2;
//  // 宽度计算公式中参数 b
//  double b = 3;
//  // 宽度计算公式中参数 c
//  double c = 4;
//  // 宽度计算公式中参数 d
//  double d = 5;
//  // 是否为固定值 0 代表否，有值代表固定为此值
//  double w = 6;
//}

message LaneMark {
  repeated Point shape = 1000;
  repeated LaneMarkAttribution lane_mark_attrs = 1001;
}

message LaneMarkAttribution {
  // 车道线风格长度
  double length = 1;
  // 车道距离起始点偏离距离
  double s = 2;
  // 车道线右边界点位数组中的起始下标
  int32 start_index = 3;
  // 车道线右边界点位数组中的结束下标
  int32 end_index = 4;
  // 车道分界线样式
  string style = 1000;
  // 车道线颜色
  string color = 1001;
  // 车道线宽度
  double width = 1002;
}

message Speed {
  // 车道距离起始点偏离距离
  double s = 1;
  // 限速路段长度
  double length = 2;
  // 车道线右边界点位数组中的起始下标
  int32 start_index = 3;
  //  // 车道线右边界点位数组中的结束下标
  int32 end_index = 4;

  // 速度值 为0时不限速
  double value = 1000;
  // 速度单位
  string uint = 1001;
  // 限速源
  string source = 1002;
}

message Crosswalk {
  //  uint64 id = 1;
  string crosswalk_id = 2;
  // 斑马线方向
  double heading = 3;
  // 点位 封闭多点构成
  repeated Point shape = 1000;
}

message Stopline {
  //  uint64 id = 1;
  string stopline_id = 2;
  //点位 2点连线
  repeated Point shape = 1000;
}

message Turn {
  // 带有3维朝向的点坐标
  DirectionPoint direction_point = 1;
  // 掉头、左转、直行和右转(TLSR)的组合(0否|1是)
  string turn = 2;
  // 转向与linkId的映射
  map<string, string> turn_mapping = 3;
}

message TrafficSign {
  //  uint64 id = 1;
  string traffic_sign_id = 2;
  //  三维有向点
  DirectionPoint direction_point = 3;
  string type = 4;
}

message TrafficLight {
  // 交通灯 schedule id
  string traffic_light_id = 1;
  // 路口 id
  string junction_id = 3;
  //  // 交通灯杆 id 数组
  //  repeated string  Traffic_light_pole_ids = 2;

  // 信号灯周期
  int32 cycle = 7;
  // 信号灯偏移
  int32 offset = 8;

  message MovementSignal {
    // movement id
    string movement_id = 1;
    // 绿灯信号
    message SignalOfGreen {
      // 绿灯开始时间
      int32 green_start = 1;
      // 绿灯持续时间
      int32 green_duration = 2;
      // 黄灯时间
      int32 yellow = 3;
      // 车辆清空红灯等待时间
      int32 read_clean = 4;
    }
    // 绿灯信号组
    repeated SignalOfGreen signal_of_green = 100;
  }

  message MovementSignalGroup {
    string signal_group_id = 1;
    // 交通灯杆 id 数组
    string traffic_light_pole_id = 2;
    // 流向信号数组
    repeated MovementSignal signal = 3;
  }
  // 流向信号组
  repeated MovementSignalGroup signal_group = 100;
}

message Movement {
  string movement_id = 1;
  // 入路口link id
  string upstream_link_id = 2;
  // 出路口link id
  string downstream_link_id = 3;
  // junction id
  string junction_id = 4;
  // 流向
  string flow_direction = 5;
}

message Connection {
  string connection_id = 1;
  // 所属路口 id
  string junction_id = 2;
  // 所属 lane id
  string movement_id = 3;
  // 入路口 lane id
  string upstream_lane_id = 4;
  // 出路口 lane id
  string downstream_lane_id = 5;
  // 流向
  string flow_direction = 6;

  string upstream_link_id = 7;

  string downstream_link_id = 8;

  string type = 9;
  // 车辆行驶路径
  repeated Point path = 100;
}

message DirectionPoint {
  // double精度点坐标
  Point point = 1;
  // 俯仰角
  double pitching = 2;
  // 朝向角
  double heading = 3;
  // 翻滚角
  double rolling = 4;
}

message Point {
  double x = 1;
  double y = 2;
  double z = 3;
}


message Object{
  string object_id = 1;
  string type = 2;
  repeated Point shape = 3;
}
